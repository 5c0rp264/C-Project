<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about" xml:space="preserve">
    <value>על אודות</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>לְהוֹסִיף</value>
  </data>
  <data name="all_good" xml:space="preserve">
    <value>הכל התנהל כשורה</value>
  </data>
  <data name="business_software" xml:space="preserve">
    <value>תוכנה עסקית</value>
  </data>
  <data name="business_software_error" xml:space="preserve">
    <value>תוכנה עסקית נמצאת בשימוש, איננו יכולים להתחיל בעבודת גיבוי</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>לְהַסִיר</value>
  </data>
  <data name="delete_check" xml:space="preserve">
    <value>האם אתה בטוח שברצונך למחוק את עבודת הגיבוי הבאה:</value>
  </data>
  <data name="delete_confirm" xml:space="preserve">
    <value>מחקנו את עבודת הגיבוי הבאה:</value>
  </data>
  <data name="delete_label" xml:space="preserve">
    <value>בחר עבודת גיבוי למחיקה</value>
  </data>
  <data name="delete_warning" xml:space="preserve">
    <value>עליך לבחור משרת גיבוי</value>
  </data>
  <data name="destination" xml:space="preserve">
    <value>יַעַד</value>
  </data>
  <data name="differential" xml:space="preserve">
    <value>דִיפֵרֶנציִאָלִי</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>לַעֲרוֹך</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>אשמה</value>
  </data>
  <data name="error_message1" xml:space="preserve">
    <value>סוג הגיבוי חסר</value>
  </data>
  <data name="error_message2" xml:space="preserve">
    <value>יש לזהות את שם עבודת הגיבוי</value>
  </data>
  <data name="error_message3" xml:space="preserve">
    <value>תיקיית המקור חסרה</value>
  </data>
  <data name="error_message4" xml:space="preserve">
    <value>תיקיית היעד חסרה</value>
  </data>
  <data name="execute" xml:space="preserve">
    <value>לבצע</value>
  </data>
  <data name="execute_label" xml:space="preserve">
    <value>בחר את המשרות להפעלה</value>
  </data>
  <data name="execute_warning" xml:space="preserve">
    <value>עליך לבחור משרה אחת לפחות</value>
  </data>
  <data name="extension" xml:space="preserve">
    <value>הרחבה להצפנה: (.png, .txt, .png)</value>
  </data>
  <data name="file_priority" xml:space="preserve">
    <value>קבצי עדיפות (.png, .txt, .png)</value>
  </data>
  <data name="full" xml:space="preserve">
    <value>לְהַשְׁלִים</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>בית</value>
  </data>
  <data name="information" xml:space="preserve">
    <value>מֵידָע</value>
  </data>
  <data name="log" xml:space="preserve">
    <value>עיתון</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>שם משפחה :</value>
  </data>
  <data name="pause" xml:space="preserve">
    <value>הַפסָקָה</value>
  </data>
  <data name="please" xml:space="preserve">
    <value>אנא :</value>
  </data>
  <data name="reference" xml:space="preserve">
    <value>אנא הכנס גיבוי מלא להפניה:</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>להציל</value>
  </data>
  <data name="select_label" xml:space="preserve">
    <value>בחר עבודה</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>הגדרות</value>
  </data>
  <data name="size_limit" xml:space="preserve">
    <value>גודל קובץ מרבי במקרה של העברות בו זמנית</value>
  </data>
  <data name="size_unit" xml:space="preserve">
    <value>קו</value>
  </data>
  <data name="source" xml:space="preserve">
    <value>מָקוֹר</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>מדינה</value>
  </data>
  <data name="stop" xml:space="preserve">
    <value>תפסיק</value>
  </data>
  <data name="success" xml:space="preserve">
    <value>נוסף בהצלחה</value>
  </data>
  <data name="thread_stop" xml:space="preserve">
    <value>כל הגיבויים הופסקו</value>
  </data>
</root>